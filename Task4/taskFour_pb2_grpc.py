# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import taskFour_pb2 as taskFour__pb2


class GreeterStub(object):
    """The greeting service definition.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SayHello = channel.unary_unary(
                '/helloworld.Greeter/SayHello',
                request_serializer=taskFour__pb2.HelloRequest.SerializeToString,
                response_deserializer=taskFour__pb2.HelloReply.FromString,
                )
        self.UserName = channel.unary_unary(
                '/helloworld.Greeter/UserName',
                request_serializer=taskFour__pb2.UserNameRequest.SerializeToString,
                response_deserializer=taskFour__pb2.UserNameReply.FromString,
                )
        self.PasswordEnter = channel.unary_unary(
                '/helloworld.Greeter/PasswordEnter',
                request_serializer=taskFour__pb2.PasswordEnterRequest.SerializeToString,
                response_deserializer=taskFour__pb2.PasswordEnterReply.FromString,
                )
        self.PasswordConfirmation = channel.unary_unary(
                '/helloworld.Greeter/PasswordConfirmation',
                request_serializer=taskFour__pb2.PasswordConfirmationRequest.SerializeToString,
                response_deserializer=taskFour__pb2.PasswordConfirmationReply.FromString,
                )
        self.LoginAttempt = channel.unary_unary(
                '/helloworld.Greeter/LoginAttempt',
                request_serializer=taskFour__pb2.LoginAttemptRequest.SerializeToString,
                response_deserializer=taskFour__pb2.LoginAttemptReply.FromString,
                )
        self.AuthenticateRequest = channel.unary_unary(
                '/helloworld.Greeter/AuthenticateRequest',
                request_serializer=taskFour__pb2.AuthenticateRequestRequest.SerializeToString,
                response_deserializer=taskFour__pb2.AuthenticateRequestReply.FromString,
                )


class GreeterServicer(object):
    """The greeting service definition.
    """

    def SayHello(self, request, context):
        """Sends a greeting
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UserName(self, request, context):
        """Ask for the user name
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PasswordEnter(self, request, context):
        """Ask for the password
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PasswordConfirmation(self, request, context):
        """Ask for password confirmation
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LoginAttempt(self, request, context):
        """Login attempt after password has been confirmed
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AuthenticateRequest(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_GreeterServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SayHello': grpc.unary_unary_rpc_method_handler(
                    servicer.SayHello,
                    request_deserializer=taskFour__pb2.HelloRequest.FromString,
                    response_serializer=taskFour__pb2.HelloReply.SerializeToString,
            ),
            'UserName': grpc.unary_unary_rpc_method_handler(
                    servicer.UserName,
                    request_deserializer=taskFour__pb2.UserNameRequest.FromString,
                    response_serializer=taskFour__pb2.UserNameReply.SerializeToString,
            ),
            'PasswordEnter': grpc.unary_unary_rpc_method_handler(
                    servicer.PasswordEnter,
                    request_deserializer=taskFour__pb2.PasswordEnterRequest.FromString,
                    response_serializer=taskFour__pb2.PasswordEnterReply.SerializeToString,
            ),
            'PasswordConfirmation': grpc.unary_unary_rpc_method_handler(
                    servicer.PasswordConfirmation,
                    request_deserializer=taskFour__pb2.PasswordConfirmationRequest.FromString,
                    response_serializer=taskFour__pb2.PasswordConfirmationReply.SerializeToString,
            ),
            'LoginAttempt': grpc.unary_unary_rpc_method_handler(
                    servicer.LoginAttempt,
                    request_deserializer=taskFour__pb2.LoginAttemptRequest.FromString,
                    response_serializer=taskFour__pb2.LoginAttemptReply.SerializeToString,
            ),
            'AuthenticateRequest': grpc.unary_unary_rpc_method_handler(
                    servicer.AuthenticateRequest,
                    request_deserializer=taskFour__pb2.AuthenticateRequestRequest.FromString,
                    response_serializer=taskFour__pb2.AuthenticateRequestReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'helloworld.Greeter', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Greeter(object):
    """The greeting service definition.
    """

    @staticmethod
    def SayHello(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/helloworld.Greeter/SayHello',
            taskFour__pb2.HelloRequest.SerializeToString,
            taskFour__pb2.HelloReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UserName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/helloworld.Greeter/UserName',
            taskFour__pb2.UserNameRequest.SerializeToString,
            taskFour__pb2.UserNameReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PasswordEnter(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/helloworld.Greeter/PasswordEnter',
            taskFour__pb2.PasswordEnterRequest.SerializeToString,
            taskFour__pb2.PasswordEnterReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PasswordConfirmation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/helloworld.Greeter/PasswordConfirmation',
            taskFour__pb2.PasswordConfirmationRequest.SerializeToString,
            taskFour__pb2.PasswordConfirmationReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LoginAttempt(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/helloworld.Greeter/LoginAttempt',
            taskFour__pb2.LoginAttemptRequest.SerializeToString,
            taskFour__pb2.LoginAttemptReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AuthenticateRequest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/helloworld.Greeter/AuthenticateRequest',
            taskFour__pb2.AuthenticateRequestRequest.SerializeToString,
            taskFour__pb2.AuthenticateRequestReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
